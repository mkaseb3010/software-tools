==139524== Memcheck, a memory error detector
==139524== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==139524== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==139524== Command: ./phone.c 6476756978 0
==139524== 
./phone.c: line 2: syntax error near unexpected token `('
'/phone.c: line 2: `int stringCounter(char phoneNum[]) {
==139524== 
==139524== HEAP SUMMARY:
==139524==     in use at exit: 49,889 bytes in 721 blocks
==139524==   total heap usage: 827 allocs, 106 frees, 69,786 bytes allocated
==139524== 
==139524== 56 (32 direct, 24 indirect) bytes in 1 blocks are definitely lost in loss record 201 of 222
==139524==    at 0x4C37135: malloc (vg_replace_malloc.c:381)
==139524==    by 0x192601: xmalloc (in /usr/bin/bash)
==139524==    by 0x14708E: make_bare_simple_command (in /usr/bin/bash)
==139524==    by 0x147165: make_simple_command (in /usr/bin/bash)
==139524==    by 0x141DFB: yyparse (in /usr/bin/bash)
==139524==    by 0x138149: parse_command (in /usr/bin/bash)
==139524==    by 0x138257: read_command (in /usr/bin/bash)
==139524==    by 0x1384DF: reader_loop (in /usr/bin/bash)
==139524==    by 0x136BDA: main (in /usr/bin/bash)
==139524== 
==139524== LEAK SUMMARY:
==139524==    definitely lost: 32 bytes in 1 blocks
==139524==    indirectly lost: 24 bytes in 1 blocks
==139524==      possibly lost: 0 bytes in 0 blocks
==139524==    still reachable: 49,833 bytes in 719 blocks
==139524==         suppressed: 0 bytes in 0 blocks
==139524== Reachable blocks (those to which a pointer was found) are not shown.
==139524== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==139524== 
==139524== For lists of detected and suppressed errors, rerun with: -s
==139524== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
